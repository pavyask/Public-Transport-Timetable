// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Minimal_Web_API.DataContext;

#nullable disable

namespace MinimalWebAPI.Migrations
{
    [DbContext(typeof(PTTContext))]
    [Migration("20230101214245_PTTDB_ManyToManyFix")]
    partial class PTTDBManyToManyFix
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Minimal_Web_API.Models.User", b =>
                {
                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Login");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Minimal_Web_API.Models.UserStop", b =>
                {
                    b.Property<string>("UserLogin")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StopId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserLogin", "StopId");

                    b.HasIndex("StopId");

                    b.ToTable("UserStops");
                });

            modelBuilder.Entity("Minimal_Web_API.Stop", b =>
                {
                    b.Property<string>("StopId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZoneName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StopId");

                    b.ToTable("Stops");
                });

            modelBuilder.Entity("Minimal_Web_API.Models.UserStop", b =>
                {
                    b.HasOne("Minimal_Web_API.Stop", "Stop")
                        .WithMany("UserStops")
                        .HasForeignKey("StopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Minimal_Web_API.Models.User", "User")
                        .WithMany("UserStops")
                        .HasForeignKey("UserLogin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stop");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Minimal_Web_API.Models.User", b =>
                {
                    b.Navigation("UserStops");
                });

            modelBuilder.Entity("Minimal_Web_API.Stop", b =>
                {
                    b.Navigation("UserStops");
                });
#pragma warning restore 612, 618
        }
    }
}
